<?xml version="1.0" encoding="utf-8"?>
<mscript xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd">
   <version>9.2</version>
   <release>2017a</release>
   <date>2017-09-19</date>
   <cell>
      <count>1</count>
      <mcode>clear;
clc;
% x[n] = [0 1 2 3 4] from n = 0
% in code y[n]=[x x x x x] is denoted as x
x = [0 1 2 3 4]
x = [ x x x x x ] % y
h = [ 3 21]   % h
ax = -1      % starting point of y
ah = -2      % starting point of h

% selecting the final start point
a = ax+ah;

% a) first part of solution

m = length(x);
n = length(h);
x1 = [x,zeros(1,n)];
h1 = [h,zeros(1,m)];


% c overlap and adding method
% number of terms after convolution n + m - 1
for i = 1:m+n-1
    Y(i)=0; % defining the i'th term 0 initially
    for j = 1:m % for all the terms in x
        if(i-j+1&gt;0) % but not the terms which are not overlapped
            Y(i) = Y(i) + x1(j)*h1(i-j+1); % summation to Y and H is flipped
        end
    end
end

% defining the x axis for the the convolution solution
xaxis = a:a+numel(Y)-1;

% plotting
subplot(3,1,1)
stem(xaxis,Y,'g')
ylabel('Convolution sum')
xlabel('---&gt; n')
title('Convolution by overlap and adding')

%a

% conv(X,H) is the default function for the convolution of two signals
subplot(3,1,2)
stem(xaxis,conv(x,h),'r')
ylabel('Convolution sum')
xlabel('---&gt; n')
title('Convolution using conv()')


% fft() and ifft() are periodic DFT but since sufficient padding with zeros is done linear convolution can be calculated. But they have one element extra on the end
subplot(3,1,3)
stem([xaxis 0],real(ifft(fft(x1).*fft(h1))))
title('Convolution using fft() and ifft()')
xlabel('---&gt; n')
ylabel('Convolution sum')</mcode>
      <mcode-xmlized>
         <mwsh:code xml:space="preserve">clear;
clc;
<mwsh:comments xml:space="preserve">% x[n] = [0 1 2 3 4] from n = 0</mwsh:comments><mwsh:comments xml:space="preserve">% in code y[n]=[x x x x x] is denoted as x</mwsh:comments>
x = [0 1 2 3 4]
x = [ x x x x x ] <mwsh:comments xml:space="preserve">% y</mwsh:comments>
h = [ 3 21]   <mwsh:comments xml:space="preserve">% h</mwsh:comments>
ax = -1      <mwsh:comments xml:space="preserve">% starting point of y</mwsh:comments>
ah = -2      <mwsh:comments xml:space="preserve">% starting point of h</mwsh:comments>
<mwsh:comments xml:space="preserve">% selecting the final start point</mwsh:comments>
a = ax+ah;

<mwsh:comments xml:space="preserve">% a) first part of solution</mwsh:comments>

m = length(x);
n = length(h);
x1 = [x,zeros(1,n)];
h1 = [h,zeros(1,m)];


<mwsh:comments xml:space="preserve">% c overlap and adding method</mwsh:comments><mwsh:comments xml:space="preserve">% number of terms after convolution n + m - 1</mwsh:comments><mwsh:keywords xml:space="preserve">for</mwsh:keywords> i = 1:m+n-1
    Y(i)=0; <mwsh:comments xml:space="preserve">% defining the i'th term 0 initially</mwsh:comments>    <mwsh:keywords xml:space="preserve">for</mwsh:keywords> j = 1:m <mwsh:comments xml:space="preserve">% for all the terms in x</mwsh:comments>        <mwsh:keywords xml:space="preserve">if</mwsh:keywords>(i-j+1&gt;0) <mwsh:comments xml:space="preserve">% but not the terms which are not overlapped</mwsh:comments>
            Y(i) = Y(i) + x1(j)*h1(i-j+1); <mwsh:comments xml:space="preserve">% summation to Y and H is flipped</mwsh:comments>        <mwsh:keywords xml:space="preserve">end</mwsh:keywords>    <mwsh:keywords xml:space="preserve">end</mwsh:keywords><mwsh:keywords xml:space="preserve">end</mwsh:keywords>
<mwsh:comments xml:space="preserve">% defining the x axis for the the convolution solution</mwsh:comments>
xaxis = a:a+numel(Y)-1;

<mwsh:comments xml:space="preserve">% plotting</mwsh:comments>
subplot(3,1,1)
stem(xaxis,Y,<mwsh:strings xml:space="preserve">'g'</mwsh:strings>)
ylabel(<mwsh:strings xml:space="preserve">'Convolution sum'</mwsh:strings>)
xlabel(<mwsh:strings xml:space="preserve">'---&gt; n'</mwsh:strings>)
title(<mwsh:strings xml:space="preserve">'Convolution by overlap and adding'</mwsh:strings>)

<mwsh:comments xml:space="preserve">%a</mwsh:comments>
<mwsh:comments xml:space="preserve">% conv(X,H) is the default function for the convolution of two signals</mwsh:comments>
subplot(3,1,2)
stem(xaxis,conv(x,h),<mwsh:strings xml:space="preserve">'r'</mwsh:strings>)
ylabel(<mwsh:strings xml:space="preserve">'Convolution sum'</mwsh:strings>)
xlabel(<mwsh:strings xml:space="preserve">'---&gt; n'</mwsh:strings>)
title(<mwsh:strings xml:space="preserve">'Convolution using conv()'</mwsh:strings>)


<mwsh:comments xml:space="preserve">% fft() and ifft() are periodic DFT but since sufficient padding with zeros is done linear convolution can be calculated. But they have one element extra on the end</mwsh:comments>
subplot(3,1,3)
stem([xaxis 0],real(ifft(fft(x1).*fft(h1))))
title(<mwsh:strings xml:space="preserve">'Convolution using fft() and ifft()'</mwsh:strings>)
xlabel(<mwsh:strings xml:space="preserve">'---&gt; n'</mwsh:strings>)
ylabel(<mwsh:strings xml:space="preserve">'Convolution sum'</mwsh:strings>)</mwsh:code></mcode-xmlized>
      <mcode-count>1</mcode-count>
      <cellOutputTarget>1</cellOutputTarget>
      <mcodeoutput class="codeoutput">
x =

     0     1     2     3     4


x =

  Columns 1 through 13

     0     1     2     3     4     0     1     2     3     4     0     1     2

  Columns 14 through 25

     3     4     0     1     2     3     4     0     1     2     3     4


h =

     3    21


ax =

    -1


ah =

    -2

</mcodeoutput>
      <img src="L4Q7_01.png"/>
   </cell>
   <originalCode>clear;
clc;
% x[n] = [0 1 2 3 4] from n = 0 
% in code y[n]=[x x x x x] is denoted as x
x = [0 1 2 3 4]
x = [ x x x x x ] % y 
h = [ 3 21]   % h 
ax = -1      % starting point of y 
ah = -2      % starting point of h 

% selecting the final start point 
a = ax+ah; 

% a) first part of solution

m = length(x);
n = length(h);
x1 = [x,zeros(1,n)];
h1 = [h,zeros(1,m)];


% c overlap and adding method
% number of terms after convolution n + m - 1
for i = 1:m+n-1
    Y(i)=0; % defining the i'th term 0 initially
    for j = 1:m % for all the terms in x
        if(i-j+1&gt;0) % but not the terms which are not overlapped
            Y(i) = Y(i) + x1(j)*h1(i-j+1); % summation to Y and H is flipped
        end
    end
end

% defining the x axis for the the convolution solution
xaxis = a:a+numel(Y)-1;

% plotting 
subplot(3,1,1)
stem(xaxis,Y,'g')
ylabel('Convolution sum')
xlabel('---&gt; n')
title('Convolution by overlap and adding') 

%a

% conv(X,H) is the default function for the convolution of two signals 
subplot(3,1,2)
stem(xaxis,conv(x,h),'r')
ylabel('Convolution sum')
xlabel('---&gt; n')
title('Convolution using conv()')


% fft() and ifft() are periodic DFT but since sufficient padding with zeros is done linear convolution can be calculated. But they have one element extra on the end  
subplot(3,1,3)
stem([xaxis 0],real(ifft(fft(x1).*fft(h1))))
title('Convolution using fft() and ifft()')
xlabel('---&gt; n')
ylabel('Convolution sum')</originalCode>
   <m-file>L4Q7</m-file>
   <filename>/home/happy/Dropbox/workspace/Matlab/DSP Lab/day 4/L4Q7.m</filename>
   <outputdir>/home/happy/Dropbox/workspace/Matlab/DSP Lab/day 4/html</outputdir>
</mscript>